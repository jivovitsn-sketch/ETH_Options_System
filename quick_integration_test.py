#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ DataIntegrator + SignalAnalyzer
"""

import logging
from data_integrator import DataIntegrator
from signal_analyzer import SignalAnalyzer

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(name)s - %(levelname)s - %(message)s')

print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò STAGE 1.4")
print("=" * 50)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
integrator = DataIntegrator()
analyzer = SignalAnalyzer()

# –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ç–∏–≤—ã
assets = integrator.get_available_assets()
print(f"üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ç–∏–≤—ã: {assets}")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ ETH (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω)
test_asset = 'ETH' if 'ETH' in assets else assets[0] if assets else 'BTC'
print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ {test_asset}...")

try:
    # 1. –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    print("   üîÑ –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    data = integrator.get_all_data(test_asset)
    quality = data['data_quality']
    print(f"   ‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: {quality['quality_score']} ({quality['available_sources']}/{quality['total_sources']} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤)")
    
    # 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
    print("   üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...")
    signal = analyzer.analyze(data)
    
    print(f"   üìà –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"      –°–∏–≥–Ω–∞–ª: {signal['signal_type']}")
    print(f"      –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal['confidence']}")
    print(f"      –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {signal['reasoning']}")
    
    # 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
    print(f"   üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
    for component, details in signal['components'].items():
        indicators = details.get('indicators_used', [])
        if indicators:
            print(f"      {component}: {indicators}")
    
    print(f"\nüéâ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢! Stage 1.4 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    print("üí° –°–æ–≤–µ—Ç: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ diagnose_data.py")
