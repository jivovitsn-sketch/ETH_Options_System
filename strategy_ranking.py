#!/usr/bin/env python3
import pandas as pd

def rank_strategies():
    df = pd.read_csv('data/fixed_backtest_results.csv')
    
    print("=== FINAL STRATEGY RANKING ===")
    
    # –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    strategy_metrics = df.groupby('strategy').agg({
        'leveraged_pnl': [
            lambda x: (x > 0).mean() * 100,  # Win Rate
            'mean',  # Average PnL
            'std',   # Volatility
            lambda x: x.mean() / x.std() if x.std() > 0 else 0  # Sharpe-like ratio
        ]
    }).round(2)
    
    strategy_metrics.columns = ['Win_Rate', 'Avg_PnL', 'Volatility', 'Risk_Ratio']
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É —Ä–∏—Å–∫/–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    strategy_metrics['Score'] = (
        strategy_metrics['Win_Rate'] * 0.3 +  # 30% weight
        (strategy_metrics['Avg_PnL'] / 1000) * 0.4 +  # 40% weight 
        strategy_metrics['Risk_Ratio'] * 30  # 30% weight
    ).round(1)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –æ–±—â–µ–º—É —Å—á–µ—Ç—É
    ranking = strategy_metrics.sort_values('Score', ascending=False)
    
    print("RANKING (–ø–æ –æ–±—â–µ–º—É —Å—á–µ—Ç—É):")
    for i, (strategy, data) in enumerate(ranking.iterrows(), 1):
        print(f"{i}. {strategy}")
        print(f"   Score: {data['Score']}")
        print(f"   Win Rate: {data['Win_Rate']:.1f}%")
        print(f"   Avg PnL: ${data['Avg_PnL']:,.0f}")
        print(f"   Risk Ratio: {data['Risk_Ratio']:.2f}")
        print()
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä—ã–Ω–∫—É
    print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –†–´–ù–û–ß–ù–´–ú –£–°–õ–û–í–ò–Ø–ú:")
    print("üìà –°–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≤–≤–µ—Ä—Ö: Bull Call Spread")
    print("üìâ –°–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≤–Ω–∏–∑: Bear Put Spread") 
    print("üìä –í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: Long Straddle")
    print("üìè –ë–æ–∫–æ–≤–æ–π —Ä—ã–Ω–æ–∫: Iron Condor")
    print("üéØ –¢–æ—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ: Butterfly Spread")

if __name__ == "__main__":
    rank_strategies()
